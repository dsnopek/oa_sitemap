<?php
/**
 * @file
 * Code for the Open Atrium Site Map feature.
 */

include_once 'oa_sitemap.features.inc';

/**
 * Implements hook_menu().
 */
function oa_sitemap_menu() {
  $items['api/oa/sitemap/%'] = array(
    'page callback' => 'oa_sitemap_spaces_callback',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function oa_sitemap_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

/**
 * Implements hook_theme().
 */
function oa_sitemap_theme() {
  $path = drupal_get_path('module', 'oa_sitemap') . '/templates';
  return array(
    'oa_sitemap_show' => array(
      'template' => 'oa-sitemap-show',
      'variables' => array(
        'node' => NULL,
        'children' => NULL,
        'sections' => NULL,
      ),
      'path' => $path,
    ),
    'oa_sitemap_header' => array(
      'template' => 'oa-sitemap-header',
      'variables' => array(
        'link' => NULL,
        'search' => NULL,
      ),
      'path' => $path,
    ),
    'oa_sitemap_app' => array(
      'template' => 'oa-sitemap-app',
      'variables' => array(
        'link' => NULL,
        'search' => NULL,
      ),
      'path' => $path,
    ),
  );
}

/**
 * JSON callback to return space/subspace/section data for a given space node
 * @param $node optional parent node
 */
function oa_sitemap_spaces_callback($nid) {
  $spaces = array();
  oa_sitemap_spaces($nid, $spaces);
  drupal_json_output($spaces);
  return;
}

/**
 * Main helper function to render a specific space row in the sitemap
 * Recursively calls for subspaces
 * @param $node, node object or nid
 * @param $icons, array of section type images keyed by tid
 * @param $index, start at 0
 * @param $depth, start at 0
 * Returns an array of data
 *
 */
function oa_sitemap_data($node, &$options, &$index = 0, $depth = 0) {
  global $user;

  if (is_numeric($node)) {
    $node = node_load($node);
  }
  $nid = !empty($node) ? $node->nid : 0;

  $children = oa_core_get_groups_by_parent($nid);
  foreach ($children as $key => $child) {
    $subspace = node_load($child);
    $children[$key] = $subspace;
  }

  $sections = oa_core_space_sections($nid, 1, FALSE, array('field_oa_section|tid'));
  $section_links = array();
  foreach ($sections as $section) {
    $id = $section->field_oa_section_tid;
    if (empty($id)) {
      $term = taxonomy_get_term_by_name('Default', 'section_type');
      $id = !empty($term) ? current(array_keys($term)) : 0;
    }
    $section_links[] = array(
      'title' => $section->title,
      'url' => url('node/' . $section->nid),
      'icon_id' => $id,
    );
  }

  if (!empty($node) && (og_user_access('node', $nid, "create " . OA_SECTION_TYPE . " content", $user))) {
    $custom_style = array(
      'oa-sitemap-section' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => 0.5,
          'height' => 0.5,
        ),
        'animation' => 'fadeIn',
      ),
    );
    ctools_include('ajax');
    ctools_include('modal');
    drupal_add_js($custom_style, 'setting');

    $section_links[] = array(
      'title' => t('New Section'),
      'url' => url('wizard/js/add/oa-section'),
      'class' => 'ctools-use-modal ctools-modal-oa-sitemap-section',
      'icon_id' => 0,
    );
  }

  $icons = array();
  if (!empty($node)) {
    if (node_access('update', $node)) {
      $icons['center'] = array(
        'icon' => 'icon-cog',
        'url' => url('node/' . $nid . '/edit'),
      );
    }
    $visibility = field_get_items('node', $node, 'group_access');
    $icons['left'] = array(
      'icon' => 'icon-user',
      'url' => url('node/' . $nid),
      'class' => $node->status ? (empty($visibility[0]['value']) ? 'oa-icon-green' : 'oa-icon-red') : '',
    );
    $icons['right'] = array(
      'icon' => 'icon-eye-open',
      'url' => url('node/' . $nid),
    );
  }

  $index++;
  $vars = array(
    'title' => !empty($node) ? check_plain($node->title) : variable_get('site_name', t('Home')),
    'url' => !empty($node) ? url('node/' . $nid) : url('<front>'),
    'sections' => $section_links,
    'nid' => $nid,
    'depth' => $depth,
    'index' => $index,
    'icons' => $icons,
  );
  if (!empty($node)) {
    $options[$nid] = str_repeat('-', $depth*2) . $node->title;
  }

  $subspaces = array();
  foreach ($children as $subspace) {
    $subspaces[] = oa_sitemap_data($subspace, $options, $index, $depth+1);
  }

  $access = empty($node)
    ? user_access('create ' . OA_SPACE_TYPE . ' content', $user)
    : (module_exists('oa_subspaces') && og_user_access('node', $nid, 'create ' . OA_SPACE_TYPE . ' content', $user));
  if ($access) {
    $index++;
    $custom_style = array(
      'oa-sitemap-space' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => 0.5,
          'height' => 0.5,
        ),
        'animation' => 'fadeIn',
      ),
    );
    ctools_include('ajax');
    drupal_add_js($custom_style, 'setting');

    $new_space_vars = array(
      'title' => t('New Space'),
      'url' => url('wizard/js/add/oa-space'),
      'class' => 'ctools-use-modal ctools-modal-oa-sitemap-space',
      'sections' => array(),
      'subspaces' => array(),
      'depth' => $depth,
      'index' => $index,
      'nid' => -1,
      'icon_id' => 0,
    );
    $subspaces[] = $new_space_vars;
  }

  $vars['subspaces'] = $subspaces;

  return $vars;
}

/**
 * Main helper function to grab all the spaces for the sitemap
 * @param $node, node object or nid
 * @param $spaces array by reference to be filled with space listing
 * @param $parent_id int nid of parent space
 * @param $index, start at 0
 * @param $depth, start at 0
 * Returns an array of data
 *
 */
function oa_sitemap_spaces($node, &$spaces, $parent_id = 0, $depth = 0) {
  global $user;

  if (is_numeric($node)) {
    $node = node_load($node);
  }
  $nid = !empty($node) ? $node->nid : 0;

  $sections = oa_core_space_sections($nid, 1, FALSE, array('field_oa_section|tid'));
  $section_links = array();
  foreach ($sections as $section) {
    $id = $section->field_oa_section_tid;
    if (empty($id)) {
      $term = taxonomy_get_term_by_name('Default', 'section_type');
      $id = !empty($term) ? current(array_keys($term)) : 0;
    }
    $section_links[] = array(
      'title' => $section->title,
      'url' => url('node/' . $section->nid),
      'icon_id' => $id,
    );
  }

  $new_section = '';
  if (!empty($node) && (og_user_access('node', $nid, "create " . OA_SECTION_TYPE . " content", $user))) {
    $custom_style = array(
      'oa-sitemap-section' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => 0.5,
          'height' => 0.5,
        ),
        'animation' => 'fadeIn',
      ),
    );
    ctools_include('ajax');
    ctools_include('modal');
    drupal_add_js($custom_style, 'setting');

    $new_section = array(
      'title' => t('New Section'),
      'url' => url('wizard/nojs/add/' . OA_SECTION_TYPE),
      'class' => 'ctools-use-modal ctools-modal-oa-sitemap-section',
      'icon_id' => 0,
    );
  }

  $icons = array();
  if (!empty($node)) {
    if (node_access('update', $node)) {
      $icons['1'] = array(
        'position' => 'center',
        'icon' => 'icon-cog',
        'url' => url('node/' . $nid . '/edit'),
      );
    }
    $visibility = field_get_items('node', $node, 'group_access');
    $icons['0'] = array(
      'position' => 'left',
      'icon' => 'icon-user',
      'url' => url('node/' . $nid),
      'class' => $node->status ? (empty($visibility[0]['value']) ? 'oa-icon-green' : 'oa-icon-red') : '',
    );
    $icons['2'] = array(
      'position' => 'right',
      'icon' => 'icon-eye-open',
      'url' => url('node/' . $nid),
    );
  }

  $new_space = '';
  $access = empty($node)
    ? user_access('create ' . OA_SPACE_TYPE . ' content', $user)
    : (module_exists('oa_subspaces') && og_user_access('node', $nid, 'create ' . OA_SPACE_TYPE . ' content', $user));
  if ($access) {
    $custom_style = array(
      'oa-sitemap-space' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => 0.5,
          'height' => 0.5,
        ),
        'animation' => 'fadeIn',
      ),
    );
    ctools_include('ajax');
    ctools_include('modal');
    drupal_add_js($custom_style, 'setting');
    $options = !empty($nid) ? array('query' => array(OA_PARENT_SPACE => $nid)) : array();
    $new_space = array(
      'title' => t('New Space'),
      'url' => url('wizard/nojs/add/' . OA_SPACE_TYPE, $options),
      'class' => 'ctools-use-modal ctools-modal-oa-sitemap-space',
    );
  }

  $spaces[$nid] = array(
    'nid' => $nid,
    'parent_id' => ($nid == 0) ? -1 : $parent_id,
    'depth' => $depth,
    'title' => !empty($node) ? check_plain($node->title) : variable_get('site_name', t('Home')),
    'url' => !empty($node) ? url('node/' . $nid) : url('<front>'),
    'new_space'=> $new_space,
    'new_section' => $new_section,
    'icons' => $icons,
    'sections' => $section_links,
    'subspaces' => array(),
  );

  $children = oa_core_get_groups_by_parent($nid);
  foreach ($children as $child) {
    $spaces[$nid]['subspaces'][] = $child;
    oa_sitemap_spaces($child, $spaces, $nid, $depth+1);
  }

  return $spaces;
}

/**
 * Main helper function to render a specific space row in the sitemap
 * Recursively calls for subspaces
 * @param $node, node object or nid
 * @param $icons, array of section type images keyed by tid
 * @param $index, start at 0
 * @param $depth, start at 0
 *
 */
function oa_sitemap_space_map($node, &$options, $icons = array(), &$index = 0, $depth = 0) {
  global $user;

  if (is_numeric($node)) {
    $node = node_load($node);
  }
  $nid = !empty($node) ? $node->nid : 0;

  $children = oa_core_get_groups_by_parent($nid);
  foreach ($children as $key => $child) {
    $subspace = node_load($child);
    $children[$key] = $subspace;
  }

  $sections = oa_core_space_sections($nid, 1, FALSE, array('field_oa_section|tid'));
  $section_links = array();
  foreach ($sections as $section) {
    $id = $section->field_oa_section_tid;
    if (empty($id)) {
      $term = taxonomy_get_term_by_name('Default', 'section_type');
      $id = !empty($term) ? current(array_keys($term)) : 0;
    }
    $section_links[] = array(
      'link' => l($section->title, 'node/' . $section->nid),
      'icon' => !empty($icons[$id]) ? $icons[$id] : '',
      'class' => 'oa-section',
      'title_class' => 'oa-section-title',
    );
  }

  if (!empty($node) && (og_user_access('node', $nid, "create " . OA_SECTION_TYPE . " content", $user))) {
    $custom_style = array(
      'oa-sitemap-section' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => 0.5,
          'height' => 0.5,
        ),
        'animation' => 'fadeIn',
      ),
    );
    ctools_include('ajax');
    ctools_include('modal');
    drupal_add_js($custom_style, 'setting');

    $section_links[] = array(
      'link' => ctools_modal_text_button(t('New Section'), 'wizard/nojs/add/oa-section',
        t('New Section'), 'ctools-modal-oa-sitemap-section'),
      'icon' => $icons[0],
      'class' => 'oa-section new-section',
      'title_class' => 'oa-section-title',
    );
  }

  $gear_icon = '';
  $view_icon = '';
  $head_icon = '';
  if (!empty($node)) {
    if (node_access('update', $node)) {
      $gear_icon = l('<icon class="icon-cog"></i>', 'node/' . $nid . '/edit', array('html' => TRUE, 'query' => drupal_get_destination()));
    }
    $view_icon = l('<icon class="icon-eye-open"></i>', 'node/' . $nid, array('html' => TRUE));
    $visibility = field_get_items('node', $node, 'group_access');
    $head_color = $node->status ? (empty($visibility[0]['value']) ? 'oa-icon-green' : 'oa-icon-red') : '';
    $head_icon = l('<icon class="icon-user ' . $head_color . '"></i>', 'node/' . $nid, array('html' => TRUE));
  }

  $index++;
  $vars = array(
    'link' => !empty($node)
      ? l('<span>' . check_plain($node->title) . '</span>', 'node/' . $nid, array('html' => TRUE))
      : l(variable_get('site_name', t('Home')), '<front>'),
    'sections' => $section_links,
    'nid' => $nid,
    'depth' => $depth,
    'index' => $index,
    'class' => 'oa-space-wrapper item',
    'title_class' => 'oa-space-title',
    'view_icon' => $view_icon,
    'gear_icon' => $gear_icon,
    'head_icon' => $head_icon,
  );
  if (!empty($node)) {
    $options[$nid] = str_repeat('-', $depth*2) . $node->title;
  }

  $subspaces = array();
  foreach ($children as $subspace) {
    $subspaces[] = oa_sitemap_space_map($subspace, $options, $icons, $index, $depth+1);
  }

  $access = empty($node)
    ? user_access('create ' . OA_SPACE_TYPE . ' content', $user)
    : (module_exists('oa_subspaces') && og_user_access('node', $nid, 'create ' . OA_SPACE_TYPE . ' content', $user));
  if ($access) {
    $index++;
    $custom_style = array(
      'oa-sitemap-space' => array(
        'modalSize' => array(
          'type' => 'scale',
          'width' => 0.5,
          'height' => 0.5,
        ),
        'animation' => 'fadeIn',
      ),
    );
    ctools_include('ajax');
    drupal_add_js($custom_style, 'setting');

    $new_space_vars = array(
      'link' => ctools_modal_text_button('<span>' . t('New Space') . '</span>', 'wizard/nojs/add/oa-space',
        t('New Space'), 'ctools-modal-oa-sitemap-space'),
      'sections' => array(),
      'subspaces' => array(),
      'depth' => "$depth",
      'index' => $index,
      'nid' => -1,
      'class' => 'oa-space-wrapper new-space',
      'title_class' => 'oa-new-space-title', // allows link to work directly
      'icon' => $icons[0],
    );
    $subspaces[] = theme('oa_sitemap_show', $new_space_vars);
  }

  $vars['subspaces'] = $subspaces;
  $output = theme('oa_sitemap_show', $vars);

  return $output;
}
